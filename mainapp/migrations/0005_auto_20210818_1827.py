# Generated by Django 3.2.5 on 2021-08-18 12:27

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('mainapp', '0004_auto_20210816_1701'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='flower',
            name='country',
        ),
        migrations.RemoveField(
            model_name='flower',
            name='grade',
        ),
        migrations.RemoveField(
            model_name='flower',
            name='history',
        ),
        migrations.RemoveField(
            model_name='flower',
            name='scent',
        ),
        migrations.RemoveField(
            model_name='flowerinpot',
            name='country',
        ),
        migrations.RemoveField(
            model_name='flowerinpot',
            name='flower_pot',
        ),
        migrations.RemoveField(
            model_name='flowerinpot',
            name='grade',
        ),
        migrations.RemoveField(
            model_name='flowerinpot',
            name='history',
        ),
        migrations.RemoveField(
            model_name='flowerinpot',
            name='scent',
        ),
        migrations.AddField(
            model_name='flower',
            name='diagonal',
            field=models.CharField(default='default title', max_length=255, verbose_name='Диагональ'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flower',
            name='display_type',
            field=models.CharField(default='default title', max_length=255, verbose_name='Тип дисплея'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flower',
            name='processor_freq',
            field=models.CharField(default='default title', max_length=255, verbose_name='Частота процессора'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flower',
            name='ram',
            field=models.CharField(default='default title', max_length=255, verbose_name='Оперативная память'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flower',
            name='time_without_charge',
            field=models.CharField(default='default title', max_length=255, verbose_name='Время работы аккумулятора'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flower',
            name='video',
            field=models.CharField(default='default title', max_length=255, verbose_name='Видеокарта'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flowerinpot',
            name='accum_volume',
            field=models.CharField(default='default title', max_length=255, verbose_name='Объем батареи'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flowerinpot',
            name='diagonal',
            field=models.CharField(default='default title', max_length=255, verbose_name='Диагональ'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flowerinpot',
            name='display_type',
            field=models.CharField(default='default title', max_length=255, verbose_name='Тип дисплея'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flowerinpot',
            name='frontal_cam_mp',
            field=models.CharField(default='default title', max_length=255, verbose_name='Фронтальная камера'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flowerinpot',
            name='main_cam_mp',
            field=models.CharField(default='default title', max_length=255, verbose_name='Главная камера'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flowerinpot',
            name='ram',
            field=models.CharField(default='default title', max_length=255, verbose_name='Оперативная память'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flowerinpot',
            name='resolution',
            field=models.CharField(default='default title', max_length=255, verbose_name='Разрешение экрана'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flowerinpot',
            name='sd',
            field=models.BooleanField(default=True, verbose_name='Наличие SD карты'),
        ),
        migrations.AddField(
            model_name='flowerinpot',
            name='sd_volume_max',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Максимальный объем встраивамой памяти'),
        ),
        migrations.AlterField(
            model_name='cart',
            name='final_price',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Общая цена'),
        ),
        migrations.AlterField(
            model_name='cart',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.customer', verbose_name='Владелец'),
        ),
        migrations.AlterField(
            model_name='cartproduct',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_products', to='mainapp.cart', verbose_name='Корзина'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='address',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='phone',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона'),
        ),
        migrations.AlterField(
            model_name='flower',
            name='image',
            field=models.ImageField(upload_to='', verbose_name='Изображение'),
        ),
        migrations.AlterField(
            model_name='flowerinpot',
            name='image',
            field=models.ImageField(upload_to='', verbose_name='Изображение'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('address', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Адрес')),
                ('status', models.CharField(choices=[('new', 'Новый заказ'), ('in_progress', 'Заказ в обработке'), ('is_ready', 'Заказ готов'), ('completed', 'Заказ выполнен')], default='new', max_length=100, verbose_name='Статус заказ')),
                ('buying_type', models.CharField(choices=[('self', 'Самовывоз'), ('delivery', 'Доставка')], default='self', max_length=100, verbose_name='Тип заказа')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий к заказу')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Дата создания заказа')),
                ('order_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата получения заказа')),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.cart', verbose_name='Корзина')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_orders', to='mainapp.customer', verbose_name='Покупатель')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='orders',
            field=models.ManyToManyField(related_name='related_order', to='mainapp.Order', verbose_name='Заказы покупателя'),
        ),
    ]
